PART
{
name = NexusFuel25
module = Part
author = TD
	mesh = NewModel.mu
	rescaleFactor = 0.1667
	
node_stack_side_1 = 20.54692,3.72761,0,1,0.0 ,0,2
node_stack_side_2 = 17.79415469,3.72761,10.27346,0.8660254,0.0 ,0.5,2
node_stack_side_3 = 10.27346,3.72761,17.79415469,0.5,0.0 ,0.8660254,2
node_stack_side_4 = 0,3.72761,20.54692,0,0.0 ,1,2
node_stack_side_5 = -10.27346,3.72761,17.79415469,-0.5,0.0 ,0.8660254,2
node_stack_side_6 = -17.79415469,3.72761,10.27346,-0.8660254,0.0 ,0.5,2
node_stack_side_7 = -20.54692,3.72761,0,-1,0.0 ,0,2
node_stack_side_8 = -17.79415469,3.72761,-10.27346,-0.8660254,0.0 ,-0.5,2
node_stack_side_9 = -10.27346,3.72761,-17.79415469,-0.5,0.0 ,-0.8660254,2
node_stack_side_10 = 0,3.72761,-20.54692,0,0.0 ,-1,2
node_stack_side_11 = 10.27346,3.72761,-17.79415469,0.5,0.0 ,-0.8660254,2
node_stack_side_12 = 17.79415469,3.72761,-10.27346,0.8660254,0.0 ,-0.5,2

	node_stack_bottom = 0.0, -18.35684, 0.0, 0.0, -1.0, 0.0, 6
	node_stack_top = 0.0, 4.11317, 0.0, 0.0, 1.0, 0.0, 6

stackSymmetry = 3

	TechRequired = highPerformanceFuelSystems
	entryCost = 46600
	cost = 13000
	category = Propulsion
	subcategory = 0
title = Nexus Style 50 foot Fuel Tank
manufacturer = Konvair division of Kerbal Dynamics
	description = A large fuel tank based on the geometry used for the Nexus tank. This has fuel and oxidizer more suitable for standard KSP rockets, and switched around.  Oxidizer is now the bulky central tank, with (much denser than LH2) fuel in the torus.
	attachRules = 1,0,1,1,0
mass = 1.77
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.3
	angularDrag = 2
	crashTolerance = 36
	breakingForce = 40000
	breakingTorque = 40000
	maxTemp = 2000 // = 2900
	//bulkheadProfiles = size20, srf
RESOURCE
{
 name = Oxidizer
 amount = 14918
 maxAmount = 14918
}

RESOURCE
{
 name = LiquidFuel
 amount = 12205
 maxAmount = 12205

}
  MODULE
    {
        name = ReflectiveShaderModule

        // Lower values for performance, higher values for aesthetics (you shouldn't ever need to go higher than 1024).
        CubeMapSize = 128

        // How deep the reflection will be ("how far the reflection camera will view")
        FarClipPlane = 500000
		// How far away must something be before it is reflected
		NearClipPlane = 15

        // Set to false to render all 6 faces of the CubeMap at once (six times slower~)
        OneFacePerFrame = true

        // The shader to find. The reflective shaders are:
        // Reflective/Diffuse
        // Reflective/VertexLit
        // Reflective/Bumped Diffuse
        ShaderName = Reflective/Bumped
		realTimeReflection = False
		

        // The height of the parallax map. Values are accepted between 0.005 and 0.08.
        ParallaxHeight = 0.005

        // How reflective the reflection will be (Weakest 0.0 - 1.0 Strongest).
        ReflectionStrength = 0.2
		//ReflectionColor = 0, 0, 0, 0

        // Use this variable to specify which meshes to apply the shader to.
        // Not using this variable will default to the first found mesh.
        // Use the actual mesh name for the value. Or you could use:
        // all - to replace the shader on all meshes in the model.
        //MeshesToChange = polymsh,polymsh_detached,polymsh_detached1
        MeshesToChange = all
        // How shiny the specularity will be (if specular).
        // This value will be automatically set if it already exists on the previous shader and is not defined here.
        //Shininess = 1.0
		updateRate = 300

        // These variables should be used together only.
        // These values will be automatically set if they already exist on the previous shader and are not defined here
        //SpecColorR = 0.5
        //SpecColorG = 0.5
        //SpecColorB = 0.5
        //SpecColorA = 0.5
		//rimFalloff = 5.0
		//rimColor = 0.8242, 0.6445, 0.1914, 1.0
		//ReflectionColor = 0.8242, 0.6445, 0.1914, 1.0
    }

}
